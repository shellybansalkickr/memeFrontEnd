[{"C:\\Users\\kushagr_2\\Documents\\meme\\src\\index.js":"1","C:\\Users\\kushagr_2\\Documents\\meme\\src\\App.js":"2","C:\\Users\\kushagr_2\\Documents\\meme\\src\\reportWebVitals.js":"3","C:\\Users\\kushagr_2\\Documents\\meme\\src\\routes.js":"4","C:\\Users\\kushagr_2\\Documents\\meme\\src\\components\\NavBar.js":"5","C:\\Users\\kushagr_2\\Documents\\meme\\src\\views\\TC.js":"6","C:\\Users\\kushagr_2\\Documents\\meme\\src\\views\\ContactUs.js":"7","C:\\Users\\kushagr_2\\Documents\\meme\\src\\views\\aboutus\\AboutUs.js":"8","C:\\Users\\kushagr_2\\Documents\\meme\\src\\views\\aboutus\\Texting.js":"9","C:\\Users\\kushagr_2\\Documents\\meme\\src\\views\\aboutus\\VideoCalling.js":"10","C:\\Users\\kushagr_2\\Documents\\meme\\src\\views\\download\\Download.js":"11","C:\\Users\\kushagr_2\\Documents\\meme\\src\\views\\recharge\\Recharge.js":"12","C:\\Users\\kushagr_2\\Documents\\meme\\src\\views\\recharge\\RechargeCard.js":"13","C:\\Users\\kushagr_2\\Documents\\meme\\src\\views\\recharge\\RechargeForm1.js":"14","C:\\Users\\kushagr_2\\Documents\\meme\\src\\components\\footer1.js":"15","C:\\Users\\kushagr_2\\Documents\\meme\\src\\views\\transactions\\Transactions.js":"16","C:\\Users\\kushagr_2\\Documents\\meme\\src\\views\\transactions\\TransactionTable.js":"17","C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\index.js":"18","C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\reportWebVitals.js":"19","C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\App.js":"20","C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\routes.js":"21","C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\components\\NavBar.js":"22","C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\components\\footer1.js":"23","C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\views\\aboutus\\AboutUs.js":"24","C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\views\\TC.js":"25","C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\views\\download\\Download.js":"26","C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\views\\ContactUs.js":"27","C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\views\\recharge\\Recharge.js":"28","C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\views\\transactions\\Transactions.js":"29","C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\views\\aboutus\\Texting.js":"30","C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\views\\aboutus\\VideoCalling.js":"31","C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\views\\transactions\\TransactionTable.js":"32","C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\views\\recharge\\RechargeCard.js":"33","C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\views\\recharge\\RechargeForm1.js":"34","C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\views\\recharge\\AddAmountCard.js":"35","C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\views\\countryConstant.js":"36"},{"size":573,"mtime":1612605575260,"results":"37","hashOfConfig":"38"},{"size":488,"mtime":1612544403284,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":499162500000,"results":"40","hashOfConfig":"38"},{"size":942,"mtime":1612856559479,"results":"41","hashOfConfig":"38"},{"size":1086,"mtime":1612007258141,"results":"42","hashOfConfig":"38"},{"size":1308,"mtime":1612862590854,"results":"43","hashOfConfig":"38"},{"size":1873,"mtime":1612858497232,"results":"44","hashOfConfig":"38"},{"size":585,"mtime":1611906125085,"results":"45","hashOfConfig":"38"},{"size":555,"mtime":1611830606274,"results":"46","hashOfConfig":"38"},{"size":815,"mtime":1611830711478,"results":"47","hashOfConfig":"38"},{"size":1203,"mtime":1612862187142,"results":"48","hashOfConfig":"38"},{"size":1136,"mtime":1612180259176,"results":"49","hashOfConfig":"38"},{"size":1418,"mtime":1612864373340,"results":"50","hashOfConfig":"38"},{"size":6008,"mtime":1612867923417,"results":"51","hashOfConfig":"38"},{"size":2097,"mtime":1612856356980,"results":"52","hashOfConfig":"38"},{"size":4303,"mtime":1612868029787,"results":"53","hashOfConfig":"38"},{"size":2003,"mtime":1612613440889,"results":"54","hashOfConfig":"38"},{"size":364,"mtime":1613977899361,"results":"55","hashOfConfig":"56"},{"size":362,"mtime":499162500000,"results":"57","hashOfConfig":"56"},{"size":479,"mtime":1613391409312,"results":"58","hashOfConfig":"56"},{"size":899,"mtime":1613391436745,"results":"59","hashOfConfig":"56"},{"size":675,"mtime":1613391542301,"results":"60","hashOfConfig":"56"},{"size":2206,"mtime":1613391447477,"results":"61","hashOfConfig":"56"},{"size":606,"mtime":1613391707289,"results":"62","hashOfConfig":"56"},{"size":1308,"mtime":1612862590854,"results":"63","hashOfConfig":"56"},{"size":641,"mtime":1613391779320,"results":"64","hashOfConfig":"56"},{"size":1873,"mtime":1612858497232,"results":"65","hashOfConfig":"56"},{"size":3784,"mtime":1614591537374,"results":"66","hashOfConfig":"56"},{"size":4448,"mtime":1614593857029,"results":"67","hashOfConfig":"56"},{"size":570,"mtime":1613391721820,"results":"68","hashOfConfig":"56"},{"size":843,"mtime":1613391729065,"results":"69","hashOfConfig":"56"},{"size":2568,"mtime":1614599403947,"results":"70","hashOfConfig":"56"},{"size":1530,"mtime":1613991049324,"results":"71","hashOfConfig":"56"},{"size":8206,"mtime":1614338701992,"results":"72","hashOfConfig":"56"},{"size":2222,"mtime":1613990942611,"results":"73","hashOfConfig":"56"},{"size":2117,"mtime":1614325204401,"results":"74","hashOfConfig":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"1mz09sm",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"77"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"77"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"77"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"77"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"77"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"77"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"77"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"14t0yen",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"120"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"120"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"120"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"120"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"120"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"120"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"120"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"120"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"120"},"C:\\Users\\kushagr_2\\Documents\\meme\\src\\index.js",[],["168","169"],"C:\\Users\\kushagr_2\\Documents\\meme\\src\\App.js",[],"C:\\Users\\kushagr_2\\Documents\\meme\\src\\reportWebVitals.js",[],"C:\\Users\\kushagr_2\\Documents\\meme\\src\\routes.js",[],"C:\\Users\\kushagr_2\\Documents\\meme\\src\\components\\NavBar.js",[],"C:\\Users\\kushagr_2\\Documents\\meme\\src\\views\\TC.js",[],"C:\\Users\\kushagr_2\\Documents\\meme\\src\\views\\ContactUs.js",[],"C:\\Users\\kushagr_2\\Documents\\meme\\src\\views\\aboutus\\AboutUs.js",[],"C:\\Users\\kushagr_2\\Documents\\meme\\src\\views\\aboutus\\Texting.js",["170"],"\r\n\r\nexport const Texting =()=>{\r\n    return(\r\n        <div className='sub-flex-container'>\r\n            <p>\r\n            <b>Texts</b><br/>\r\n            Simple, Reliable Messaging\r\n            Message your friends and family for free*. <br/>\r\n            MeMe uses your phone's Internet connection to send messages\r\n            so you can avoid SMS fees.\r\n            </p>\r\n            <img src={process.env.PUBLIC_URL + '/img/texting.png'}></img>\r\n            <p>* Data charges may apply. Contact your provider for details.</p>\r\n        </div>\r\n\r\n    )\r\n}","C:\\Users\\kushagr_2\\Documents\\meme\\src\\views\\aboutus\\VideoCalling.js",["171"],"export const VideoCalling =()=>{\r\n    return(\r\n        <div className='sub-flex-container'>\r\n            <p>\r\n            <b>Video calls</b><br/>\r\n                Speak Freely\r\n                With voice calls, you can talk to your friends and family for free*, even if they're in another country.<br/>\r\n                And with free* video calls, you can have face-to-face conversations for when voice or text just isn't enough.<br/>\r\n                MeMevideo calls use your phone's Internet connection, instead of your cell plan's voice minutes, so you don't have to worry about expensive calling charges.\r\n            </p>\r\n            <img src={process.env.PUBLIC_URL + '/img/videocalling.png'}></img>\r\n            <p>* Data charges may apply. Contact your provider for details.</p>\r\n        </div>\r\n\r\n    )\r\n}","C:\\Users\\kushagr_2\\Documents\\meme\\src\\views\\download\\Download.js",["172","173"],"import React, { Component } from 'react';\r\n\r\n\r\n//css\r\nimport \"./Download.css\";\r\n\r\n\r\nclass Download extends Component {\r\n  render(){\r\n      return (\r\n        // <div className=\"FlexWrapper\" style={{ backgroundImage: \"url(/img/hand-with-app.png)\",\r\n        //   backgroundPosition: 'center',\r\n        //   backgroundSize:'cover'\r\n        // }} >\r\n        <div className='FlexWrapper' style={{padding:'20px',backgroundColor:'white'}}>\r\n        \r\n          <p style={{color:'white',textAlign:'center',alignItems:'center'}}>\r\n            <a href='https://play.google.com/store/apps/details?id=com.videochat.memechat' target=\"_blank\">\r\n              <img src={process.env.PUBLIC_URL + '/img/Appstore.png'} style={{height:'52%',width:'24%'}}></img>\r\n            </a>\r\n            <br/> <br/>\r\n            {/* <a href='https://play.google.com/store/apps/details?id=com.videochat.memechat' target=\"_blank\">\r\n              <img src={process.env.PUBLIC_URL + '/img/android.jpeg'} style={{width:'30%'}}></img>\r\n              <p style={{color:'white'}}>* Data charges may apply. Contact your provider for details.</p>\r\n            </a> */}\r\n            </p>\r\n        </div>\r\n      )\r\n  }\r\n}\r\nexport default Download;","C:\\Users\\kushagr_2\\Documents\\meme\\src\\views\\recharge\\Recharge.js",["174","175"],"import React, { Component } from 'react';\r\nimport { Image } from 'react-bootstrap';\r\n\r\n\r\n//css\r\nimport './Recharge.css';\r\n\r\n//components\r\nimport { RechargeCard } from './RechargeCard';\r\n\r\nclass Recharge extends Component {\r\n  render() {\r\n    return (<>\r\n      <div style={{ padding: '20px' }}>\r\n        <img src={process.env.PUBLIC_URL + '/img/recharge-logo.svg'} width='100%' height='100px' />\r\n      </div>\r\n      <div className=' recharge-centre flex-container' style={{\r\n        flexFlow: 'row wrap',\r\n        padding: '20px',\r\n        justifyContent: 'space-between', alignItems: 'center'\r\n      }}>\r\n        <RechargeCard val={{ coins: '300', amount: '4' }}></RechargeCard>\r\n        <RechargeCard val={{ coins: '1200', amount: '11' }}></RechargeCard>\r\n        <RechargeCard val={{ coins: '2500', amount: '25' }}></RechargeCard>\r\n        <RechargeCard val={{ coins: '7000', amount: '97' }}></RechargeCard>\r\n        <RechargeCard val={{ coins: '15000', amount: '200' }}></RechargeCard>\r\n        <RechargeCard val={{ coins: '30000', amount: '400' }}></RechargeCard>\r\n\r\n      </div>\r\n    </>\r\n\r\n    )\r\n  }\r\n}\r\nexport default Recharge;","C:\\Users\\kushagr_2\\Documents\\meme\\src\\views\\recharge\\RechargeCard.js",["176"],"import React, { useState } from 'react';\r\nimport { Card, Button, Modal } from 'react-bootstrap';\r\nimport { RechargeForm1 } from './RechargeForm1';\r\n\r\nexport class RechargeCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false\r\n\r\n    }\r\n\r\n  }\r\n  \r\n\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  handleShow = () => {\r\n    this.setState({ show: true });\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Card style={{\r\n          width: '18rem', backgroundColor: 'pink', flexGrow: '1', margin: '30px', padding: '50px'\r\n        }}>\r\n          <Card.Img variant=\"top\" src=\"/img/coins.png\" />\r\n          <Card.Body>\r\n            <Card.Title>{this.props.val.coins} Coins</Card.Title>\r\n            <Card.Text>\r\n              <b>{this.props.val.amount}$</b>\r\n            </Card.Text>\r\n            <Button variant=\"primary\" onClick={this.handleShow} ><b> Pay {this.props.val.amount}$</b></Button>\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Buy {this.props.val.coins} coins</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <RechargeForm1 val={this.props.val} onClose={this.handleClose.bind(this)}></RechargeForm1>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","C:\\Users\\kushagr_2\\Documents\\meme\\src\\views\\recharge\\RechargeForm1.js",["177","178"],"import React, { useState } from 'react';\r\nimport { Form, Col, Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\n\r\n\r\n\r\nexport class RechargeForm1 extends React.Component {\r\n\r\n  constructor(props) {\r\n    debugger;\r\n    super(props);\r\n    this.state = {\r\n\r\n      validated: false,\r\n      coins: this.props.coins,\r\n      memeId: \"\",\r\n      lastName: \"\",\r\n      firstName: \"\",\r\n      amount: \"\",\r\n      phone: \"\",\r\n      emailId: \"\",\r\n      isLoading: false\r\n    }\r\n  }\r\n\r\n  redirectToPayU = (pd) => {\r\n    //use window.bolt.launch if you face an error in bolt.launch\r\n    this.setState({ isLoading: false });\r\n    window.bolt.launch(pd, {\r\n      responseHandler: function (response) {\r\n        // your payment response Code goes here\r\n        fetch('/api/setStatus', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(response)\r\n        })\r\n          .then(function (response1) {\r\n          })\r\n      },\r\n      catchException: function (response) {\r\n\r\n      }\r\n    });\r\n    this.props.onClose();\r\n  }\r\n\r\n  setValidated = (val) => {\r\n    this.setState({ validated: val });\r\n  }\r\n\r\n\r\n  handleSubmit = (event) => {\r\n    const form = event.currentTarget;\r\n    event.preventDefault();\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    else {\r\n      this.setState({ isLoading: true });\r\n      var bodyFormData = new FormData();\r\n      var payUParam;\r\n      bodyFormData.append('memeId', this.state.memeId);\r\n      bodyFormData.append('lastName', this.state.lastName);\r\n      bodyFormData.append('firstName', this.state.firstName);\r\n      bodyFormData.append('amount', this.props.val.amount);\r\n      bodyFormData.append('number', this.state.phone);\r\n      bodyFormData.append('emailId', this.state.emailId);\r\n      bodyFormData.append('coins', this.props.val.coins);\r\n\r\n      axios({\r\n        method: 'post',\r\n        url: '/api/rechargeApi',\r\n        data: bodyFormData\r\n      })\r\n        .then(response => {\r\n          debugger;\r\n          if (response.status == '200') {\r\n            console.log(response);\r\n            payUParam = {\r\n              key: response.data.key,\r\n              txnid: response.data.txnid,\r\n              amount: response.data.amount,\r\n              firstname: response.data.firstname,\r\n              email: response.data.email,\r\n              phone: response.data.phone,\r\n              productinfo: response.data.productinfo,\r\n              surl: response.data.surl,\r\n              furl: response.data.furl,\r\n              hash: response.data.hash\r\n            }\r\n            this.redirectToPayU(payUParam);\r\n          }\r\n        })\r\n        .then((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n    this.setValidated(true);\r\n  }\r\n\r\n\r\n  handleEmailChange = (e) => {\r\n    this.setState({ emailId: e.target.value });\r\n  }\r\n  handleNameChange = (e) => {\r\n    this.setState({ firstName: e.target.value });\r\n  }\r\n  handleLnameChange = (e) => {\r\n    this.setState({ lastName: e.target.value });\r\n  }\r\n  handlePhoneChange = (e) => {\r\n    this.setState({ phone: e.target.value });\r\n  }\r\n\r\n  handleIdChange = (e) => {\r\n    this.setState({ memeId: e.target.value });\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\r\n        <Form.Row>\r\n          <Form.Group as={Col} md=\"6\" controlId=\"memeId\" >\r\n            <Form.Label>MeMe Id</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"MemeId\" value={this.state.memeId} onChange={this.handleIdChange} required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid meme Id.\r\n             </Form.Control.Feedback>\r\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"3\" controlId=\"emailId\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control type=\"email\" placeholder=\"Email\" value={this.state.emailId} onChange={this.handleEmailChange} required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid email abc@xyz.com.\r\n             </Form.Control.Feedback>\r\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} md=\"6\" controlId=\"firstname\">\r\n            <Form.Label>First Name</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Name\" value={this.state.firstName} onChange={this.handleNameChange} required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide your name.\r\n             </Form.Control.Feedback>\r\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"6\" controlId=\"lastname\">\r\n            <Form.Label>Last Name</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Name\" value={this.state.lastName} onChange={this.handleLnameChange} />\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} md=\"6\" controlId=\"phone\">\r\n            <Form.Label>Mobile</Form.Label>\r\n            <Form.Control type=\"phone\" placeholder=\"xxxxxxxx\" required minLength='8' value={this.state.phone} onChange={this.handlePhoneChange} />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a mobile number.\r\n             </Form.Control.Feedback>\r\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        {this.state.isLoading === true ? <Loader type=\"ThreeDots\" color=\"blue\" height=\"80px\" width=\"60px\" /> :\r\n          <Button type=\"submit\" >Pay $ {this.props.val.amount}\r\n          </Button>}\r\n\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","C:\\Users\\kushagr_2\\Documents\\meme\\src\\components\\footer1.js",[],"C:\\Users\\kushagr_2\\Documents\\meme\\src\\views\\transactions\\Transactions.js",["179"],"import React from 'react';\r\nimport { Form, Col, Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nimport Loader from 'react-loader-spinner';\r\nimport { TransactionTable } from './TransactionTable';\r\n\r\n\r\n\r\nclass Transactions extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            validated: false,\r\n            userId: \"\",\r\n            password: \"\",\r\n            currentUser: null,\r\n            isLoading: false\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    setValidated = (val) => {\r\n        this.setState({ validated: val });\r\n    }\r\n\r\n\r\n    handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n        debugger;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        } else {\r\n\r\n            event.preventDefault();\r\n\r\n            this.validateUser();\r\n        }\r\n        this.setValidated(true);\r\n    }\r\n\r\n    validateUser = () => {\r\n        this.setState({ isLoading: true });\r\n        axios.get('/api/verifyuser/manager', {\r\n            params: {\r\n                password: this.state.password,\r\n                userId: this.state.userId\r\n            }\r\n        }\r\n        ).then((response) => {\r\n            if (response.status == '200') {\r\n                this.setState({ isLoading: false });\r\n                this.setState({ currentUser: response.data });\r\n            }\r\n        })\r\n\r\n    };\r\n\r\n\r\n    handlePasswordChange = (e) => {\r\n        this.setState({ password: e.target.value });\r\n    }\r\n\r\n    handleIdChange = (e) => {\r\n        this.setState({ userId: e.target.value });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div style={{ margin: '50px', padding: '30px' }} >\r\n\r\n                {this.state.currentUser === null ?\r\n                    <p style={{ backgroundColor: 'white', padding: '30px' }}>\r\n                        <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\r\n                            <Form.Row>\r\n                                <Col></Col>\r\n                                <Form.Group as={Col} md=\"6\" controlId=\"userId\" >\r\n                                    <Form.Label>Manager Id</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"abc@xyz.com\" value={this.state.userId} onChange={this.handleIdChange} required />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        Please provide a registered manager Id.\r\n             </Form.Control.Feedback>\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Col></Col>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Col></Col>\r\n                                <Form.Group as={Col} md=\"6\" controlId=\"password\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control type=\"password\" placeholder=\"*****\" required value={this.state.password} onChange={this.handlePasswordChange} />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        Please provide a password.\r\n             </Form.Control.Feedback>\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Col></Col>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Col></Col>\r\n                                <Col sm='9'>\r\n                                    {this.state.isLoading === true ? <Loader type=\"ThreeDots\" color=\"blue\" height=\"80px\" width=\"60px\" /> :\r\n                                        <Button type=\"submit\" >Log In\r\n                                </Button>}\r\n                                </Col>\r\n\r\n                            </Form.Row>\r\n                        </Form>\r\n                    </p>\r\n                    :\r\n                    <TransactionTable />}\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Transactions;\r\n\r\n\r\n","C:\\Users\\kushagr_2\\Documents\\meme\\src\\views\\transactions\\TransactionTable.js",["180"],"\r\nimport React from 'react';\r\nimport { TablePagination } from 'react-pagination-table';\r\nimport { Button, Form,Col} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\n\r\n//Table header\r\nconst Header = [\"Name\", \"Age\", \"Size\", \"Phone\", \"Gender\"];\r\n\r\nexport class TransactionTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: \"\",\r\n            trnData: []\r\n        }\r\n    }\r\n    setDate =(e)=>{\r\n        this.setState({date:e.target.value});\r\n    }\r\n    fetchData = () => {\r\n        axios.get(\"/api/fetchTransactionByDate\",{\r\n            params : {\r\n                date : this.state.date\r\n            }\r\n        })\r\n            .then((response) => {\r\n                debugger;\r\n                this.setState({ trnData: response.data });\r\n            }, (error) => {\r\n\r\n            });\r\n    }\r\n    render() {\r\n        const Header = ['TxnId', 'TimeStamp', 'MeMe Id', 'Mobile', 'Coins', 'Amount', 'Status']\r\n        return (\r\n            <div style={{backgroundColor:'white',padding:'20px'}}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"6\" controlId=\"selecteDate\" >\r\n                        <Form.Control type=\"date\" placeholder=\"Transaction Date\" max={moment().format(\"YYYY-MM-DD\")} value={this.state.date} onChange={this.setDate} required />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md=\"3\" >\r\n                        <Button onClick={this.fetchData}>Search</Button>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <TablePagination\r\n                    title=\"Transactions\"\r\n                    headers={Header}\r\n                    data={this.state.trnData}\r\n                    columns=\"txnId.txnTime.memeId.number.coins.amount.status\"\r\n                    perPageItemCount={1}\r\n                    totalCount={this.state.trnData.length}\r\n\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\index.js",[],["181","182"],"C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\reportWebVitals.js",[],"C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\App.js",[],"C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\routes.js",[],"C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\components\\NavBar.js",[],"C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\components\\footer1.js",[],"C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\views\\aboutus\\AboutUs.js",[],"C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\views\\TC.js",[],"C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\views\\download\\Download.js",["183","184"],"import React, { Component } from 'react';\r\nimport Appstore from '../img/Appstore.png';\r\n\r\n\r\n//css\r\nimport \"./Download.css\";\r\n\r\n\r\nclass Download extends Component {\r\n  render() {\r\n    return (\r\n\r\n      <div className='FlexWrapper' style={{ padding: '20px', backgroundColor: 'white' }}>\r\n\r\n        <p style={{ color: 'white', textAlign: 'center', alignItems: 'center' }}>\r\n          <a href='https://play.google.com/store/apps/details?id=com.videochat.memechat' target=\"_blank\">\r\n            <img src={Appstore} style={{ height: '52%', width: '24%' }}></img>\r\n          </a>\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Download;","C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\views\\ContactUs.js",[],"C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\views\\recharge\\Recharge.js",["185","186","187","188","189"],"import React, { Component } from 'react';\r\nimport { Dropdown, DropdownButton,MenuItem } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\n//img\r\nimport RechargeLogo from '../img/recharge-logo.svg';\r\n\r\n//css\r\nimport './Recharge.css';\r\n\r\n//components\r\nimport { RechargeCard } from './RechargeCard';\r\nimport { AddAmountCard } from './AddAmountCard';\r\nimport * as countryMap from '../countryConstant';\r\nclass Recharge extends Component {\r\n  om\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedCountry: {\r\n        id: 6175,\r\n        country: 'TimorLeste',\r\n        currency: 'USD',\r\n\r\n      },\r\n      isLoaded: false,\r\n      error: null,\r\n      offers: [],\r\n      rate: 1\r\n    }\r\n  }\r\n\r\n  fetchRechargeOffer = () => {\r\n    axios({\r\n      method: 'get',\r\n      url: '/api/fetchRechargeOffers'\r\n    })\r\n      .then(response => {\r\n        if (response.status == '200') {\r\n          this.setState({\r\n            isLoaded: true,\r\n            offers: response.data\r\n          })\r\n        }\r\n      }, (error) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error\r\n        })\r\n\r\n      });\r\n  }\r\n\r\n  fetchCurrentRateOfCurrencyWithDollar = (currency) => {\r\n\r\n    var fetchData = \"USD_\" + currency;\r\n    axios({\r\n      method: 'get',\r\n      url: 'https://free.currconv.com/api/v7/convert',\r\n      params: {\r\n        q: fetchData,\r\n        compact: \"ultra\",\r\n        apiKey: \"bd0afe2d97ec9c15d4cc\"\r\n      }\r\n    }).then(response => {\r\n      if (response.status == '200') {\r\n        this.setState({\r\n          isLoaded: true\r\n        })\r\n        var fetchData = \"USD_\" + currency;\r\n        var responseRate = response.data[fetchData];\r\n        this.setState({\r\n          rate: responseRate\r\n        })\r\n\r\n      }\r\n    }, (error) => {\r\n      this.setState({\r\n        isLoaded: true,\r\n        error\r\n      })\r\n\r\n    })\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchRechargeOffer();\r\n\r\n  }\r\n  changeSelectedCountry = (s) => {\r\n    var selectedCountry = { ...this.state.selectedCountry };\r\n    s.selectedCountry.rate = this.fetchCurrentRateOfCurrencyWithDollar(s.selectedCountry.currency);\r\n    selectedCountry.id = s.selectedCountry.id;\r\n    selectedCountry.country = s.selectedCountry.country;\r\n    selectedCountry.currency = s.selectedCountry.currency;\r\n    selectedCountry.rate = selectedCountry.rate;\r\n    this.setState({ selectedCountry });\r\n  }\r\n  render() {\r\n    return (<>\r\n\r\n      <div style={{ padding: '20px', backgroundColor: 'white', textAlign: 'left' }}>\r\n        <img src={RechargeLogo} width='100%' height='100px' />\r\n        <b>Region</b>\r\n\r\n        <DropdownButton id=\"dropdown-basic-button\" bsStyle=\"default\"\r\n          bsSize=\"small\"\r\n          style={{ maxHeight: \"18px\" }} title={this.state.selectedCountry.country}>\r\n\r\n          {countryMap.countries.map(selectedCountry => (\r\n            <Dropdown.Item as=\"button\"><div onClick={() => this.changeSelectedCountry({ selectedCountry })}>{selectedCountry.country}</div></Dropdown.Item>\r\n\r\n          ))}\r\n        </DropdownButton>\r\n      </div>\r\n      {this.state.isLoaded === false ? \"\" : <div className=' recharge-centre flex-container' style={{\r\n        flexFlow: 'row wrap',\r\n        padding: '20px',\r\n        justifyContent: 'space-between', alignItems: 'center'\r\n      }}>\r\n\r\n        <AddAmountCard val={{ selectedCountry: this.state.selectedCountry }} />\r\n        {this.state.offers.map((offer, i) => {\r\n          console.log(this.state.offers);\r\n          return (\r\n            <RechargeCard val={{ coins: offer.coinValue, amount: (offer.dollarValue * this.state.rate).toFixed(0), calledFrom: 'plans', selectedCountry: this.state.selectedCountry }}></RechargeCard>\r\n          )\r\n\r\n        })}\r\n\r\n\r\n      </div>}\r\n\r\n    </>\r\n\r\n    )\r\n  }\r\n}\r\nexport default Recharge;","C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\views\\transactions\\Transactions.js",["190","191"],"import React from 'react';\r\nimport { Form, Col, Button ,Alert} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nimport Loader from 'react-loader-spinner';\r\nimport { TransactionTable } from './TransactionTable';\r\n\r\n\r\n\r\nclass Transactions extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            validated: false,\r\n            userId: \"\",\r\n            password: \"\",\r\n            currentUser: null,\r\n            isLoading: false\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    setValidated = (val) => {\r\n        this.setState({ validated: val });\r\n    }\r\n\r\n\r\n    handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        } else {\r\n\r\n            event.preventDefault();\r\n\r\n            this.validateUser();\r\n        }\r\n        this.setValidated(true);\r\n    }\r\n\r\n    validateUser = () => {\r\n        debugger;\r\n        this.setState({ isLoading: true });\r\n        axios.get('/api/verifyuser/manager', {\r\n            params: {\r\n                password: this.state.password,\r\n                userId: this.state.userId\r\n            }\r\n        }\r\n        ).then((response) => {\r\n            debugger;\r\n            if (response.status == '200') {\r\n                this.setState({ isLoading: false });\r\n                this.setState({ currentUser: response.data });\r\n            }\r\n        }).catch((error) => {\r\n            this.setState({ isLoading: false });\r\n            console.log(error);\r\n\r\n        })\r\n\r\n    };\r\n\r\n\r\n    handlePasswordChange = (e) => {\r\n        this.setState({ password: e.target.value });\r\n    }\r\n\r\n    handleIdChange = (e) => {\r\n        this.setState({ userId: e.target.value });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div style={{ margin: '50px', padding: '30px' }} >\r\n\r\n                {this.state.currentUser === null ?\r\n                    <p style={{ backgroundColor: 'white', padding: '30px' }}>\r\n                        <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\r\n                            <Form.Row>\r\n                                <Col></Col>\r\n                                <Form.Group as={Col} md=\"6\" controlId=\"userId\" >\r\n                                    <Form.Label>Manager Id</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"abc@xyz.com\" value={this.state.userId} onChange={this.handleIdChange} required />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        Please provide a registered manager Id.\r\n             </Form.Control.Feedback>\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Col></Col>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Col></Col>\r\n                                <Form.Group as={Col} md=\"6\" controlId=\"password\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control type=\"password\" placeholder=\"*****\" required value={this.state.password} onChange={this.handlePasswordChange} />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        Please provide a password.\r\n             </Form.Control.Feedback>\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Col></Col>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Col></Col>\r\n                                <Col sm='9'>\r\n                                    {this.state.isLoading === true ? <Loader type=\"ThreeDots\" color=\"blue\" height=\"80px\" width=\"60px\" /> :\r\n                                        <Button type=\"submit\" >Log In\r\n                                </Button>}\r\n                                </Col>\r\n\r\n                            </Form.Row>\r\n                        </Form>\r\n                    </p>\r\n                    :\r\n                    <TransactionTable />}\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Transactions;\r\n\r\n\r\n","C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\views\\aboutus\\Texting.js",["192"],"import texting from '../img/texting.png';\r\n\r\nexport const Texting = () => {\r\n    return (\r\n        <div className='sub-flex-container'>\r\n            <p>\r\n                <b>Texts</b><br />\r\n            Simple, Reliable Messaging\r\n            Message your friends and family for free*. <br />\r\n            MeMe uses your phone's Internet connection to send messages\r\n            so you can avoid SMS fees.\r\n            </p>\r\n            <img src={texting}></img>\r\n            <p>* Data charges may apply. Contact your provider for details.</p>\r\n        </div>\r\n\r\n    )\r\n}","C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\views\\aboutus\\VideoCalling.js",["193"],"import videocalling from '../img/videocalling.png';\r\nexport const VideoCalling = () => {\r\n    return (\r\n        <div className='sub-flex-container'>\r\n            <p>\r\n                <b>Video calls</b><br />\r\n                Speak Freely\r\n                With voice calls, you can talk to your friends and family for free*, even if they're in another country.<br />\r\n                And with free* video calls, you can have face-to-face conversations for when voice or text just isn't enough.<br />\r\n                MeMevideo calls use your phone's Internet connection, instead of your cell plan's voice minutes, so you don't have to worry about expensive calling charges.\r\n            </p>\r\n            <img src={videocalling}></img>\r\n            <p>* Data charges may apply. Contact your provider for details.</p>\r\n        </div>\r\n\r\n    )\r\n}","C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\views\\transactions\\TransactionTable.js",["194","195"],"\r\nimport React from 'react';\r\nimport { TablePagination } from 'react-pagination-table';\r\nimport { Button, Form, Col } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\n\r\n\r\n//Table header\r\nconst Header = [\"Name\", \"Age\", \"Size\", \"Phone\", \"Gender\"];\r\n\r\n\r\nexport class TransactionTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: \"\",\r\n            trnData: []\r\n        }\r\n    }\r\n    setDate = (e) => {\r\n        this.setState({ date: e.target.value });\r\n    }\r\n    fetchData = () => {\r\n        axios.get(\"/api/fetchTransactionByDate\", {\r\n            params: {\r\n                date: this.state.date\r\n            }\r\n        })\r\n            .then(response => {\r\n                this.setState({ trnData: response.data });\r\n            }, (error) => {\r\n\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const Header = ['TxnId', 'TimeStamp', 'MeMe Id', 'Mobile', 'Coins', 'Amount', 'Status']\r\n        const columns = [\r\n            {\r\n                accessor: 'txnId'\r\n            },\r\n            {\r\n                accessor: 'txnTime'\r\n            },\r\n            {\r\n                accessor: 'memeId'\r\n            },\r\n            {\r\n                accessor: 'number'\r\n            },\r\n            {\r\n                accessor: 'coins'\r\n            },\r\n            {\r\n                accessor: 'amount'\r\n            }\r\n        ];\r\n\r\n\r\n        return (\r\n            <div style={{ backgroundColor: 'white', padding: '20px' }}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"6\" controlId=\"selecteDate\" >\r\n                        <Form.Control type=\"date\" placeholder=\"Transaction Date\" max={moment().format(\"YYYY-MM-DD\")} value={this.state.date} onChange={this.setDate} required />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md=\"3\" >\r\n                        <Button onClick={this.fetchData}>Search</Button>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <TablePagination\r\n                    title=\"Transactions\"\r\n                    headers={Header}\r\n                    data={this.state.trnData}\r\n                    columns={columns}\r\n                    showPagination={true}\r\n                    perPageItemCount={1}\r\n                    totalCount={this.state.trnData.length}\r\n\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\views\\recharge\\RechargeCard.js",["196"],"import React, { useState } from 'react';\r\nimport { Card, Button, Modal } from 'react-bootstrap';\r\nimport { RechargeForm1 } from './RechargeForm1';\r\nimport coins from '../img/coins.png';\r\n\r\nexport class RechargeCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false\r\n\r\n    }\r\n\r\n  }\r\n  \r\n\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  handleShow = () => {\r\n    this.setState({ show: true });\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Card style={{\r\n          width: '18rem', backgroundColor: 'pink', flexGrow: '1', margin: '30px', padding: '50px'\r\n        }}>\r\n          <Card.Img variant=\"top\" src={coins} />\r\n          <Card.Body>\r\n            <Card.Title>{this.props.val.coins} Coins</Card.Title>\r\n            <Card.Text>\r\n              <b>{this.props.val.amount} {this.props.val.selectedCountry.currency}</b>\r\n            </Card.Text>\r\n            <Button variant=\"primary\" onClick={this.handleShow} ><b> Pay {this.props.val.amount} {this.props.val.selectedCountry.currency}</b></Button>\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Buy {this.props.val.coins} coins</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <RechargeForm1 val={this.props.val} onClose={this.handleClose.bind(this)}></RechargeForm1>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\views\\recharge\\RechargeForm1.js",["197","198","199","200","201","202"],"import React, { useState } from 'react';\r\nimport { Form, Col, Button, InputGroup, FormControl, Image } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\nimport coda from '../img/coda.png';\r\nimport payUMoney from '../img/payUMoney.jpg';\r\n\r\n\r\n\r\nexport class RechargeForm1 extends React.Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n    this.state = {\r\n\r\n      validated: false,\r\n      coins: this.props.coins,\r\n      memeId: \"\",\r\n      lastName: \"\",\r\n      firstName: \"\",\r\n      amount: \"\",\r\n      phone: \"\",\r\n      emailId: \"\",\r\n      isLoading: false,\r\n      paymentMode: \"CODA\",\r\n    }\r\n  }\r\n\r\n  redirectToPayU = (response) => {\r\n    var pd = {\r\n      key: response.data.key,\r\n      txnid: response.data.txnid,\r\n      amount: response.data.amount,\r\n      firstname: response.data.firstname,\r\n      email: response.data.email,\r\n      phone: response.data.phone,\r\n      productinfo: response.data.productinfo,\r\n      surl: response.data.surl,\r\n      furl: response.data.furl,\r\n      hash: response.data.hash\r\n    }\r\n    //use window.bolt.launch if you face an error in bolt.launch\r\n    this.setState({ isLoading: false });\r\n    window.bolt.launch(pd, {\r\n      responseHandler: function (response) {\r\n        // your payment response Code goes here\r\n        fetch('/api/setStatus', {\r\n\r\n          method: 'POST',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ response, txnid: pd.txnid }),\r\n\r\n        })\r\n          .then(function (response1) {\r\n          })\r\n      },\r\n      catchException: function (response) {\r\n        fetch('/api/setStatus', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ response, txnid: pd.txnid }),\r\n        })\r\n          .then(function (response1) {\r\n          })\r\n      }\r\n    });\r\n    this.props.onClose();\r\n  }\r\n\r\n  setValidated = (val) => {\r\n    this.setState({ validated: val });\r\n  }\r\n\r\n\r\n  handleSubmit = (event) => {\r\n    const form = event.currentTarget;\r\n    event.preventDefault();\r\n\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    else {\r\n      this.setState({ isLoading: true });\r\n      var bodyFormData = new FormData();\r\n      var payUParam;\r\n      bodyFormData.append('memeId', this.state.memeId);\r\n      bodyFormData.append('lastName', this.state.lastName);\r\n      bodyFormData.append('firstName', this.state.firstName);\r\n      bodyFormData.append('amount', this.props.val.amount);\r\n      bodyFormData.append('number', this.state.phone);\r\n      bodyFormData.append('emailId', this.state.emailId);\r\n      bodyFormData.append('coins', this.props.val.coins);\r\n      bodyFormData.append('countryName', this.props.val.selectedCountry.country);\r\n      bodyFormData.append('paymentVia', this.state.paymentMode)\r\n\r\n      axios({\r\n        method: 'post',\r\n        url: '/api/rechargeApi',\r\n        data: bodyFormData\r\n      })\r\n        .then(response => {\r\n          this.setState({ isLoading: false });\r\n          if (response.status !== 200) {\r\n\r\n            return null;\r\n\r\n          }\r\n          if (this.state.paymentMode === 'PAYU') {\r\n            console.log(response);\r\n            this.redirectToPayU(response);\r\n            return null;\r\n          }\r\n          this.redirectToCoda(response);\r\n        })\r\n        .then((error) => {\r\n          console.log(error);\r\n          this.setState({ isLoading: false });\r\n        });\r\n    }\r\n    this.setValidated(true);\r\n  }\r\n  redirectToCoda = (response) => {\r\n    window.airtime_checkout(response.data.txnId);\r\n    this.props.onClose();\r\n    setTimeout(() => {\r\n      axios({\r\n        method:'post',\r\n        url:'/api/getStatusFromCoda',\r\n        params:{txnId:response.data.txnId}\r\n      }).then((response)=>{\r\n        console.log(response);\r\n      }).then((error)=>{\r\n        console.log(error);\r\n      });\r\n      \r\n    }, 60000);\r\n    \r\n  }\r\n\r\n\r\n\r\n  handleEmailChange = (e) => {\r\n    this.setState({ emailId: e.target.value });\r\n  }\r\n  handleNameChange = (e) => {\r\n    this.setState({ firstName: e.target.value });\r\n  }\r\n  handleLnameChange = (e) => {\r\n    this.setState({ lastName: e.target.value });\r\n  }\r\n  handlePhoneChange = (e) => {\r\n    this.setState({ phone: e.target.value });\r\n  }\r\n\r\n  handleIdChange = (e) => {\r\n    this.setState({ memeId: e.target.value });\r\n  }\r\n\r\n  handlePayModeChange = (e) => {\r\n    debugger;\r\n    this.setState({\r\n      paymentMode: e.target.value\r\n    });\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\r\n        <Form.Row>\r\n          <Form.Group as={Col} md=\"6\" controlId=\"memeId\" >\r\n            <Form.Label>MeMe Id</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"MemeId\" value={this.state.memeId} onChange={this.handleIdChange} required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid meme Id.\r\n             </Form.Control.Feedback>\r\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"3\" controlId=\"emailId\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control type=\"email\" placeholder=\"Email\" value={this.state.emailId} onChange={this.handleEmailChange} required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid email abc@xyz.com.\r\n             </Form.Control.Feedback>\r\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} md=\"6\" controlId=\"firstname\">\r\n            <Form.Label>First Name</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Name\" value={this.state.firstName} onChange={this.handleNameChange} required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide your name.\r\n             </Form.Control.Feedback>\r\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"6\" controlId=\"lastname\">\r\n            <Form.Label>Last Name</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Name\" value={this.state.lastName} onChange={this.handleLnameChange} />\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} md=\"6\" controlId=\"phone\">\r\n            <Form.Label>Mobile</Form.Label>\r\n            <Form.Control type=\"phone\" placeholder=\"xxxxxxxx\" required minLength='8' value={this.state.phone} onChange={this.handlePhoneChange} />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a mobile number.\r\n             </Form.Control.Feedback>\r\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <InputGroup as={Col} md=\"5\" controlId=\"paymentMode\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Radio id=\"payment\" name=\"payment\" value=\"CODA\" onChange={this.handlePayModeChange} checked />\r\n            </InputGroup.Prepend>\r\n            <img style={{ height: '80px', width: '150px' }} src={coda} />\r\n          </InputGroup>\r\n          <InputGroup as={Col} md=\"6\" controlId=\"paymentMode\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Radio id=\"payment\" name=\"payment\" value=\"PAYU\" onChange={this.handlePayModeChange} />\r\n            </InputGroup.Prepend>\r\n            <img style={{ height: '80px', width: '140px' }} src={payUMoney} />\r\n          </InputGroup>\r\n\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <div class={Col}>\r\n            {this.state.isLoading === true ? <Loader type=\"ThreeDots\" color=\"blue\" height=\"80px\" width=\"60px\" /> :\r\n              <Button type=\"submit\" >Pay  {this.props.val.amount} {this.props.val.selectedCountry.currency}\r\n              </Button>}\r\n          </div>\r\n\r\n        </Form.Row>\r\n\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n",["203","204"],"C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\views\\recharge\\AddAmountCard.js",["205"],"import React, { useState } from 'react';\r\nimport { Card, Button, Modal, Form } from 'react-bootstrap';\r\nimport { RechargeForm1 } from './RechargeForm1';\r\nimport coins from '../img/coins.png';\r\n\r\nexport class AddAmountCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: false,\r\n            val: {\r\n                amount: 0,\r\n                coins: 0,\r\n                calledFrom: 'new',\r\n                currency:this.props.val.currency\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    handleClose = () => {\r\n        this.setState({ show: false });\r\n    }\r\n\r\n    handleShow = () => {\r\n        this.setState({ show: true });\r\n    }\r\n\r\n    handleAmountChange = (e) => {\r\n        var val = { ...this.state.val }\r\n        val.amount = e.target.value ;\r\n        this.setState({ val })\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Card style={{\r\n                    width: '18rem', backgroundColor: 'pink', flexGrow: '1', margin: '30px', padding: '50px'\r\n                }}>\r\n                    <Card.Img variant=\"top\" src={coins} />\r\n                    <Card.Body>\r\n                        <Card.Title>Add Amount</Card.Title>\r\n                        <Card.Text>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Amount\" value={this.state.val.amount} onChange={this.handleAmountChange} required />\r\n                        </Card.Text>\r\n                        <Button variant=\"primary\" onClick={this.handleShow} disabled={!this.state.val.amount} ><b> Add {this.state.val.amount} {this.props.val.selectedCountry.currency}</b></Button>\r\n                    </Card.Body>\r\n                </Card>\r\n\r\n                <Modal show={this.state.show} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Recharge with  {this.state.val.amount} </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <RechargeForm1 val={this.state.val} onClose={this.handleClose.bind(this)}></RechargeForm1>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\kushagr_2\\Documents\\kickr_meme\\memechat\\meme\\src\\views\\countryConstant.js",["206"],"import React from \"react\";\r\nexport const countries =[\r\n    {\r\n        id:6169,\r\n        country:'Myanmar',\r\n        currency:'MMK'\r\n    },{\r\n        id:6170,\r\n        country:'Russia',\r\n        currency:'RUB'\r\n    },\r\n    {\r\n        id:6171,\r\n        country:'Taiwan',\r\n        currency:'TWD'\r\n    },\r\n    {\r\n        id:6172,\r\n        country:'Philippines',\r\n        currency:'PHP'\r\n    },\r\n    {\r\n        id:6173,\r\n        country:'Cambodia',\r\n        currency:'KHR'\r\n    },\r\n    {\r\n        id:6174,\r\n        country:'Malayasia',\r\n        currency:'MYR'\r\n    },\r\n    {\r\n        id:6175,\r\n        country:'TimorLeste',\r\n        currency:'USD'\r\n    },\r\n    {\r\n        id:6176,\r\n        country:'Singapore',\r\n        currency:'SGD'\r\n    },\r\n    {\r\n        id:6177,\r\n        country:'Indonesia',\r\n        currency:'IDR'\r\n    },\r\n    {\r\n        id:6178,\r\n        country:'Laos',\r\n        currency:'LAK'\r\n    },\r\n    {\r\n        id:6179,\r\n        country:'Thailand',\r\n        currency:'THB'\r\n    },\r\n    {\r\n        id:6180,\r\n        country:'SriLanka',\r\n        currency:'LKR'\r\n    },\r\n    {\r\n        id:6181,\r\n        country:'Pakistan',\r\n        currency:'PKR'\r\n    },\r\n    {\r\n        id:6182,\r\n        country:'UAE',\r\n        currency:'AED'\r\n    },\r\n    {\r\n        id:6183,\r\n        country:'Bahrain',\r\n        currency:'BHD'\r\n    },\r\n    {\r\n        id:6185,\r\n        country:'India',\r\n        currency:'INR'\r\n    },\r\n    {\r\n        id:6186,\r\n        country:'Egypt',\r\n        currency:'EGP'\r\n    },\r\n    {\r\n        id:6187,\r\n        country:'Nigeria',\r\n        currency:'NGN'\r\n    },\r\n    {\r\n        id:6188,\r\n        country:'Kuwait',\r\n        currency:'KWD'\r\n    },\r\n    {\r\n        id:6189,\r\n        country:'SouthAfrica',\r\n        currency:'ZAR'\r\n    },\r\n    {\r\n        id:6190,\r\n        country:'SaudiArabia',\r\n        currency:'SAR'\r\n    },\r\n    {\r\n        id:6191,\r\n        country:'Mexico',\r\n        currency:'MXN'\r\n    },\r\n    {\r\n        id:6192,\r\n        country:'Brazil',\r\n        currency:'BRL'\r\n    },\r\n    {\r\n        id:6193,\r\n        country:'Argentina',\r\n        currency:'ARS'\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n] \r\n",{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":13,"column":13,"nodeType":"213","endLine":13,"endColumn":68},{"ruleId":"211","severity":1,"message":"212","line":11,"column":13,"nodeType":"213","endLine":11,"endColumn":73},{"ruleId":"214","severity":1,"message":"215","line":18,"column":13,"nodeType":"213","endLine":18,"endColumn":108},{"ruleId":"211","severity":1,"message":"212","line":19,"column":15,"nodeType":"213","endLine":19,"endColumn":106},{"ruleId":"216","severity":1,"message":"217","line":2,"column":10,"nodeType":"218","messageId":"219","endLine":2,"endColumn":15},{"ruleId":"211","severity":1,"message":"212","line":15,"column":9,"nodeType":"213","endLine":15,"endColumn":100},{"ruleId":"216","severity":1,"message":"220","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":25},{"ruleId":"216","severity":1,"message":"220","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":25},{"ruleId":"221","severity":1,"message":"222","line":82,"column":31,"nodeType":"223","messageId":"224","endLine":82,"endColumn":33},{"ruleId":"221","severity":1,"message":"222","line":56,"column":33,"nodeType":"223","messageId":"224","endLine":56,"endColumn":35},{"ruleId":"216","severity":1,"message":"225","line":10,"column":7,"nodeType":"218","messageId":"219","endLine":10,"endColumn":13},{"ruleId":"207","replacedBy":"226"},{"ruleId":"209","replacedBy":"227"},{"ruleId":"214","severity":1,"message":"215","line":16,"column":11,"nodeType":"213","endLine":16,"endColumn":106},{"ruleId":"211","severity":1,"message":"212","line":17,"column":13,"nodeType":"213","endLine":17,"endColumn":73},{"ruleId":"216","severity":1,"message":"228","line":2,"column":35,"nodeType":"218","messageId":"219","endLine":2,"endColumn":43},{"ruleId":"221","severity":1,"message":"222","line":42,"column":29,"nodeType":"223","messageId":"224","endLine":42,"endColumn":31},{"ruleId":"221","severity":1,"message":"222","line":69,"column":27,"nodeType":"223","messageId":"224","endLine":69,"endColumn":29},{"ruleId":"229","severity":1,"message":"230","line":100,"column":28,"nodeType":"231","messageId":"232","endLine":100,"endColumn":48},{"ruleId":"211","severity":1,"message":"212","line":107,"column":9,"nodeType":"213","endLine":107,"endColumn":63},{"ruleId":"216","severity":1,"message":"233","line":2,"column":29,"nodeType":"218","messageId":"219","endLine":2,"endColumn":34},{"ruleId":"221","severity":1,"message":"222","line":57,"column":33,"nodeType":"223","messageId":"224","endLine":57,"endColumn":35},{"ruleId":"211","severity":1,"message":"212","line":13,"column":13,"nodeType":"213","endLine":13,"endColumn":32},{"ruleId":"211","severity":1,"message":"212","line":12,"column":13,"nodeType":"213","endLine":12,"endColumn":37},{"ruleId":"216","severity":1,"message":"234","line":8,"column":8,"nodeType":"218","messageId":"219","endLine":8,"endColumn":22},{"ruleId":"216","severity":1,"message":"225","line":12,"column":7,"nodeType":"218","messageId":"219","endLine":12,"endColumn":13},{"ruleId":"216","severity":1,"message":"220","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":25},{"ruleId":"216","severity":1,"message":"220","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":25},{"ruleId":"216","severity":1,"message":"235","line":2,"column":41,"nodeType":"218","messageId":"219","endLine":2,"endColumn":52},{"ruleId":"216","severity":1,"message":"217","line":2,"column":54,"nodeType":"218","messageId":"219","endLine":2,"endColumn":59},{"ruleId":"216","severity":1,"message":"236","line":93,"column":11,"nodeType":"218","messageId":"219","endLine":93,"endColumn":20},{"ruleId":"211","severity":1,"message":"212","line":224,"column":13,"nodeType":"213","endLine":224,"endColumn":74},{"ruleId":"211","severity":1,"message":"212","line":230,"column":13,"nodeType":"213","endLine":230,"endColumn":79},{"ruleId":"207","replacedBy":"237"},{"ruleId":"209","replacedBy":"238"},{"ruleId":"216","severity":1,"message":"220","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":25},{"ruleId":"216","severity":1,"message":"239","line":1,"column":8,"nodeType":"218","messageId":"219","endLine":1,"endColumn":13},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Header' is assigned a value but never used.",["240"],["241"],"'MenuItem' is defined but never used.","no-self-assign","'selectedCountry.rate' is assigned to itself.","MemberExpression","selfAssignment","'Alert' is defined but never used.","'BootstrapTable' is defined but never used.","'FormControl' is defined but never used.","'payUParam' is defined but never used.",["240"],["241"],"'React' is defined but never used.","no-global-assign","no-unsafe-negation"]